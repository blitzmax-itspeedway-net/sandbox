
Type TDocuments Extends TMap
	' Use the URI as the key?
	' Stores TDocuments
	
	
End Type

Type TSyntaxNode
	Field genus:String

	Field parent:TSyntaxNode
	
End Type


SYMBOL TABLE
Attached to document

    Parser must add "blocks/nodes" as well as symbols to this table
    - A block is defined as a Function...EndFunction, Method, While, type etc...    

    provider.update( source )

    POSITION        NAME        KIND        CLASS       ERROR
    (1,0)-(1,7)     provider    variable    TProvider
    (1,8)-(1,13)    update      method      TProvider   "unknown method"
    (1,16)-(1,21)   source      variable    String
    (x,y)-(x,y)     thing       variable    undefined   "Undefined variable"

    METHOD getSymbolAt( position )
    
        loop through symbols in document (Or use an index etc)
        if ( symbol.start.x <= position.x ) and ( symbol.end.x >= position.x ) FOUND

    METHOD getNodeAt( position )
        loop through symbol table for KIND="block" within bounds of position.

DEFINITION TABLE
    This is a tree-based table
    If search does not find anything in current node it will go up the tree to parent until
        it hits the root. At that point it should consult "import" definition table.
    Each node (Function, method, while, for, type, struc etc.) will have it's own table

    LOCAL provider:TProvider
    function validate:int( something:string )
    type TProvider

    POSITION        NAME        SCOPE   KIND        CLASS
    (1,0)-(1,30)    provider    LOCAL   variable    TProvider
    (2,0)-(2,41)    validate    LOCAL   function    
    (x,y)-(x,y)     TProvider   Global  type        

    METHOD getDefinition( x,y )
        symbol = document.getSymbolAt( position )
        node   = document.getNodeAt( position )
        loop through definitions in node (or use index)
        if name = symbol.name FOUND
        ** Need to use recursion to look back up tree

DESIGN
It appears that a symbol and a token deinfition are VERY similar. The record is much the same.
    Defintion will have a parent & scope, symbol will not


textDocument/publishDiagnostic
DIAGNOSTICS
============================================================
https://code.visualstudio.com/api/language-extensions/programmatic-language-features#provide-diagnostics

    These are pushed to the client

    For each symbol in document where error<>""
        add to diagnostics report


completionProvider
CODE COMPLETION
============================================================
https://code.visualstudio.com/api/language-extensions/programmatic-language-features#show-code-completion-proposals

TODO:

	Not sure how To implement that!
		I geuss there are places Where code is valid,
			"fu" could be Function Or fussy.run()
			
	1. Lookup Current node in document
			find all symbols
			If symbol includes a dot, lookup symbol Type methods/fields
	

hoverProvider
HOVER PROVIDER
============================================================
https://code.visualstudio.com/api/language-extensions/programmatic-language-features#show-hovers

	lookup symbol at cursor
	
	symbol = currentdocument.getsymbolat(x,y)
    if not symbol, return null
    select symbol.kind
    case variable: FindDefinition( symbol.name )
	case method:   findDefinition( symbol.class )
	

signatureHelpProvider
SIGNATURE
============================================================
https://code.visualstudio.com/api/language-extensions/programmatic-language-features#help-with-function-and-method-signatures
TODO:


definitionProvider
DEFINITION
============================================================
https://code.visualstudio.com/api/language-extensions/programmatic-language-features#show-definitions-of-a-symbol

	document = currentdocument.getDefintionAt(x,y)


referencesProvider
FIND ALL REFERNCES TO A SYMBOL
============================================================
https://code.visualstudio.com/api/language-extensions/programmatic-language-features#find-all-references-to-a-symbol


documentHighlightProvider
HIGHLIGHT ALL OCCURRANCES OF A SYMBOL
============================================================
https://code.visualstudio.com/api/language-extensions/programmatic-language-features#highlight-all-occurrences-of-a-symbol-in-a-document


============================================================

