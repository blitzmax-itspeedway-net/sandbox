
1. Fix PEG() so it produces decent results -   DONE
2. Create "EXPECTED" error messages when mismatches occur
    2a. Add error messages to a list that can be retrieved later
    2b. Add callback for errors
3. Add support for case insensitive: ~"TEXT"
4. Add support for #quiet to stop EXPECT error logging
5. Add support for #error to inject error in Parsetree
6. Fix LINE and BLOCK comments

// Current way of catching an error
LINE -> _* ( EOL / RULE / COMMENT / BADLINE ) 
BADLINE -> ( !EOL . )* EOL

Change comments To "//" And possibly /*..*/

Add support For directives:
! KEY = VALUE

Current directives:
!START=Blitzmax
!RESERVEDWORDS=	' Used to prevent keywords from being reserved words

CASE INSENSITIVE USING A TILDE: ~"FUNCTION"

$expression - Return matched text instead of match
	
Add callback For errors To parser; Or maybe simply call Self.errorhandler( ... ) 

	MATCH error thrown when a match fails
	SYNTAX error thrown when no matches in a choice match
	
String = '"' value:(!(eol / '"') .)+ '"' { return value; }
       / '"' value:(!(eol / '"') .)+     { error('unterminated string constant'); return value; }

"EXPECTED" ERROR MESSAGES

    number -> [0-9]*
    sum => number "+" number

grammar.parse( "3 + A" )    "Expected 'number' at 5"

    number "integer" -> [0-9]*
    sum => number "+" number

grammar.parse( "3 + A" )    "Expected 'integer' at 5"

SILENT ERRORS
Error is Not generated on fail

    number -> #quiet( [0-9]* ) / #EXPECTED("identifier")








 





 


