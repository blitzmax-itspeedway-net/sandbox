'  Packrat Parser for {$NAME$}
'
'  DATE:     {$DATE$}
'  VERSION:  {$VERSION$} build {$BUILD$}
'
'  Generated by '{$GENERATOR$}'
'    Version: {$VERSION$}
'
'  Template:
'    Version: 1.0
'
'  ###
'  ##### WARNING
'  #####
'  ##### This file is generated and all manual changes will be overwritten
'  #####
'  ##### DO NOT UPDATE MANUALLY
'  ###

Rem
{$PEG$}
EndRem

' Create a Packrat Parser for {$NAME$}
Function {$NAME$}_Parser:TPackratParser()
    Return New TPackratParser_{$NAME$}()
End Function

' A Packrat Parser for {$NAME$}
Type TPackratParser_{$NAME$} Extends TPackratParser

	Method New()

		grammar = New TGrammar( "{$NAME$}", "{$STARTRULE$}" )

		' DECLARE RULES
		
		grammar.declare([ {$DECLARATION$} ])
					
		' DEFINE RULES
		
{$RULES$}

		' VALIDATE RULES
		
		validate()

	End Method

	' SHORTCUT FOR NONTERMINAL PATTERNS
	
	Method __:TPattern( name:String )
		Assert grammar.contains( name ), "Undefined Pattern '"+name+"' in definition"
		Return New TNonTerminal( name, grammar )
	End Method
	
    ' DECLARE AST VISITORS

'    Method visit_default:TASTNode( ast:TASTNode )
'        Return ast
'    End Method

End Type


